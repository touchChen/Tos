1、整个流程： 1）boot 加载 loader
              2）loader 加载 kernel
			  3）kernel 开始使用 c语言
			  
2、文件格式： 1）boot 与 loader 是 fat12
              2）kernel 是 elf
			  
			  
c语言 数组的地址与数值名一样

resb 指令，给未使用的段进行初始化工作，是条伪指令

popfd 指令 弹出的值覆盖 eflags寄存器，pushfd 压入堆栈

eflags 寄存器：按位寄存状态，包括通用状态和系统状态
       其中常用的通用状态位包括: zf、df
	   ZF标志：计算的结果为0则将为1，反之为0
	   DF标志：该方向标志，指示串指令自动(主要：LODS\STOS)自动递增(减)
	           而设置和清除DF标志的指令是STD及CLD

bochs 调试，跳到指定的位置，加载的loader、kernel都放在指定的位置


在保护模式下，段寄存器的值为选择子的值，在loader模块 jmp 到kernel 模块的过程中，寄存器的值没变


中断堆栈 eflags 的相关性


